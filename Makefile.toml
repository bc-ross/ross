[config]
skip_core_tasks = true

[env.development]
RUST_BACKTRACE = "full"
CARGO_MAKE_OUTPUT_DIR = "debug"

[env.production]
CARGO_MAKE_OUTPUT_DIR = "release"
CARGO_MAKE_BUILD_PROFILE = "--release"

[env]
CONDA_PREFIX = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/env"

[tasks.default]
dependencies = ["build"]

[tasks.build]
command = "cargo"
args = ["build", "@@remove-empty(CARGO_MAKE_BUILD_PROFILE)"]

[tasks.nightly-build]
command = "cargo"
env = { RUSTFLAGS = "-Zlocation-detail=none -Zfmt-debug=none" }
args = [
    "+nightly",
    "build",
    "-Z",
    "build-std=std,panic_abort",
    '-Z',
    'build-std-features="optimize_for_size"',
    "-Z",
    "build-std-features=panic_immediate_abort",
    "--target",
    "${CARGO_MAKE_RUST_TARGET_TRIPLE}",
    "--release",
]
install_crate = false

[tasks.scan]
script = [
    "cargo check",
    # "cargo clippy --all-targets -- -D warnings",
    "cargo bloat",
    "cargo +nightly udeps",
]

[tasks.run]
linux_alias = "linux_run"
windows_alias = "windows_run"

[tasks.linux_run]
command = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/${CARGO_MAKE_OUTPUT_DIR}/${CARGO_MAKE_PROJECT_NAME}"
dependencies = ["build"]

[tasks.windows_run]
command = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/${CARGO_MAKE_OUTPUT_DIR}/${CARGO_MAKE_PROJECT_NAME}.exe"
dependencies = ["build"]

[tasks.nightly-run]
linux_alias = "linux_nightly-run"
windows_alias = "windows_nightly-run"

[tasks.linux_nightly-run]
command = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/${CARGO_MAKE_RUST_TARGET_TRIPLE}/release/${CARGO_MAKE_PROJECT_NAME}"
dependencies = ["nightly-build"]

[tasks.windows_nightly-run]
command = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/${CARGO_MAKE_RUST_TARGET_TRIPLE}/release/${CARGO_MAKE_PROJECT_NAME}.exe"
dependencies = ["nightly-build"]
