[config]
skip_core_tasks = true

[env.development]
RUST_BACKTRACE = "full"
CARGO_MAKE_OUTPUT_DIR = "debug"

[env.production]
CARGO_MAKE_OUTPUT_DIR = "release"
CARGO_MAKE_BUILD_PROFILE = "--release"

[env]
CONDA_PREFIX = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/env"

[tasks.default]
dependencies = ["build"]

[tasks.build]
dependencies = ["pre-build", "build-core", "post-build"]

[tasks.build-core]
command = "cargo"
args = ["build", "@@remove-empty(CARGO_MAKE_BUILD_PROFILE)"]

[tasks.pre-build]
condition = { files_not_exist = [
    "${CONDA_PREFIX}/LICENSE_PYTHON.txt",
] } # Python will always have a license, right?
command = "${CONDA_PATH}"
args = [
    "env",
    "create",
    "--prefix",
    "${CONDA_PREFIX}",
    "--file",
    "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/environment.yml",
    "--yes",
]
dependencies = ["find-conda"]


[tasks.find-conda]
condition = { env_not_set = ["CONDA_PATH"] }
env = { CONDA_PATH = "conda" }

[tasks.post-build]
command = "${CONDA_PATH}"
args = [
    "run",
    "--prefix",
    "${CONDA_PREFIX}",
    "python",
    "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/scripts/inject.py",
]
dependencies = ["find-conda"]

[tasks.scan]
script = [
    "cargo check",
    # "cargo clippy --all-targets -- -D warnings",
    "cargo bloat",
    "cargo +nightly udeps",
]

[tasks.run]
linux_alias = "linux_run"
windows_alias = "windows_run"

[tasks.linux_run]
command = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/${CARGO_MAKE_OUTPUT_DIR}/${CARGO_MAKE_PROJECT_NAME}"
dependencies = ["build"]

[tasks.windows_run]
command = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/${CARGO_MAKE_OUTPUT_DIR}/${CARGO_MAKE_PROJECT_NAME}.exe"
dependencies = ["build"]
